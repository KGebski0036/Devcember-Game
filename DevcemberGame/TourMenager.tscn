[gd_scene load_steps=11 format=2]

[ext_resource path="res://player/characters/tourMachine/TourMachine.gd" type="Script" id=1]
[ext_resource path="res://player/characters/TourManager.gd" type="Script" id=2]
[ext_resource path="res://player/characters/tourMachine/ChooseCharacter.gd" type="Script" id=3]
[ext_resource path="res://player/Character.tscn" type="PackedScene" id=4]
[ext_resource path="res://assets/Timer/Scene.tscn" type="PackedScene" id=5]
[ext_resource path="res://player/characters/tourMachine/Move.gd" type="Script" id=6]
[ext_resource path="res://player/characters/tourMachine/Enemy.gd" type="Script" id=7]
[ext_resource path="res://player/characters/tourMachine/End.gd" type="Script" id=9]
[ext_resource path="res://player/characters/tourMachine/Shoot.gd" type="Script" id=10]

[sub_resource type="GDScript" id=1]
script/source = "class_name Character
extends KinematicBody2D



onready var WallColider : RayCast2D = $WallColider
onready var ShootColider : RayCast2D = $ShootColider
onready var Mark : Sprite = $Strzalka
onready var StateMachine = $StateMachine

const UP_DIRECTION := Vector2.UP

export var speed: float = 100.0
export var max_jump_strength: float = 150.0
export var maximum_jumps: int= 3
export var jump_weakening: float = 10.0
export var gravity: float = 500.0
export var max_health: float = 200
export var defense: float = 1
export var max_heigth_that_dont_hurt_character: float = 250 #maksymalna wysokosc z ktorej moze upasc
export var bullet_scene: PackedScene

enum ACTION_STATE {
	IDLING,
	JUMPING,
	DOUBLE_JUMPING,
	FALLING,
	WALL_SLIDING,
	HIT_THE_GROUND,
	RUNNING_LEFT,
	RUNNING_RIGHT
}

var chosen := false
enum TURN_STATE {
	NOT_ACTIVE,
	MOVE,
	AIM,
	READY
}

#turn related
var target_point : Vector2
var has_target := false 
var shoot_is_visible := false
var is_active := false
var is_ready := false
var turn_state = TURN_STATE.NOT_ACTIVE

#movement_related
var jump_strength := max_jump_strength
var jumps_made := 0
var velocity := Vector2.ZERO
var previous_velocity := Vector2.ZERO
var horizontal_direction := 0.0

#health related
var health:= max_health


#func _physics_process(delta):
#	target_point = ShootColider.target_point
#	if(is_active):
#		update_input()
#		execute_state( update_state() )
#	else:
#		horizontal_direction = 0
#
#	velocity.x = lerp(velocity.x, horizontal_direction * speed, 0.2)
#	velocity.y += gravity * delta
#	jebudu = velocity.y
#	velocity = move_and_slide(velocity, UP_DIRECTION)
#	if(jebudu - velocity.y > alakurwarzeczywiscie):
#		execute_state([ACTION_STATE.JEBNAL_W_ZIEMIE])
#	ShootColider.visible = shoot_is_visible
#
#func update_input():
#	horizontal_direction = Input.get_action_strength(\"right\") - Input.get_action_strength(\"left\")
#
func update_state():
	var states := Array() 

	if(is_on_floor()):
		if(Input.is_action_just_pressed(\"jump\")):
			states.append(ACTION_STATE.JUMPING)
	else:
		if(velocity.y > 0.0):
			states.append(ACTION_STATE.FALLING)
			if(Input.is_action_just_pressed(\"jump\")):
				states.append(ACTION_STATE.DOUBLE_JUMPING)
		if(WallColider.is_colliding()):
			states.append(ACTION_STATE.WALL_SLIDING)

	if(is_zero_approx(velocity.x)):
		states.append(ACTION_STATE.IDLING)
	else:
		if(velocity.x < 0):
			states.append(ACTION_STATE.RUNNING_LEFT)
		else:
			states.append(ACTION_STATE.RUNNING_RIGHT)

	return states

func execute_state(states : Array):
	if(states.has(ACTION_STATE.WALL_SLIDING)):
		jumps_made = 0
		if(velocity.y > 30):
			velocity.y = 30
	if(states.has(ACTION_STATE.JUMPING)):
		jump_strength = max_jump_strength
		velocity.y = 0
		jumps_made = 1
		velocity.y -= jump_strength
	if(states.has(ACTION_STATE.DOUBLE_JUMPING)):
		if(jumps_made < maximum_jumps):
			velocity.y = 0
			jumps_made += 1
			velocity.y -= jump_strength
			jump_strength -= jump_weakening
	if(states.has(ACTION_STATE.HIT_THE_GROUND)):
		health -= (previous_velocity.y - velocity.y - max_heigth_that_dont_hurt_character) / 5
#
#func change_turn_state(new_turn_state):
#	if(new_turn_state == turn_state):
#		return
#
#	match new_turn_state:
#		TURN_STATE.STOP:
#			is_active = false
#			shoot_is_visible = false 
#			Mark.visible = true
#		TURN_STATE.MOVE:
#			is_active = true
#			shoot_is_visible = false
#			Mark.visible = true
#		TURN_STATE.AIM: 
#			is_ready = false
#			is_active = false
#			shoot_is_visible = true
#			has_target = false
#			Mark.visible = true
#		TURN_STATE.READY:
#			is_ready = true
#			is_active = false
#			shoot_is_visible = true
#			has_target = true
#			Mark.visible = true
#		TURN_STATE.NOT_ACTIVE:
#			is_active = false
#			shoot_is_visible = false
#			Mark.visible = false
#		_:
#			push_error(\"Something is wrong ... i can feel it\")
#	turn_state = new_turn_state
#
#func damage(attack: int, piercing: int = 0):
#	var damage = attack / (defense - piercing)
#	health -= damage
#	if (health < 0):
#		pass #TODO
#	emit_signal(\"damage_changed\", float(health) /max_health )
"

[node name="TourMenager" type="Node"]
script = ExtResource( 2 )

[node name="Timer" parent="." instance=ExtResource( 5 )]
margin_left = 276.0
margin_top = 4.0
margin_right = 276.0
margin_bottom = 4.0
rect_scale = Vector2( 0.24, 0.24 )

[node name="Character2" parent="." instance=ExtResource( 4 )]
position = Vector2( 69, 11 )
script = SubResource( 1 )

[node name="Character1" parent="." instance=ExtResource( 4 )]
position = Vector2( 249, 22 )
script = SubResource( 1 )

[node name="Character3" parent="." instance=ExtResource( 4 )]
position = Vector2( 246, 75 )
script = SubResource( 1 )

[node name="EndTour" type="Button" parent="."]
visible = false
margin_left = 142.0
margin_top = 3.0
margin_right = 190.0
margin_bottom = 23.0
text = "End"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TourMachine" type="Node" parent="."]
script = ExtResource( 1 )
initial_tour = NodePath("ChooseCharacter")

[node name="Move" type="Node" parent="TourMachine"]
script = ExtResource( 6 )

[node name="Shoot" type="Node" parent="TourMachine"]
script = ExtResource( 10 )

[node name="End" type="Node" parent="TourMachine"]
script = ExtResource( 9 )

[node name="Enemy" type="Node" parent="TourMachine"]
script = ExtResource( 7 )

[node name="ChooseCharacter" type="Node" parent="TourMachine"]
script = ExtResource( 3 )

[connection signal="timer_out" from="Timer" to="." method="_on_Timer_timer_out"]
[connection signal="mouse_entered" from="EndTour" to="." method="_on_EndTour_mouse_entered"]
[connection signal="mouse_exited" from="EndTour" to="." method="_on_EndTour_mouse_exited"]
[connection signal="pressed" from="EndTour" to="." method="_on_EndTour_pressed"]
